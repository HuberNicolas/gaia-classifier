Model and Parameters - Scores
--------------------------------------------------
Confusion Matrix:
[[7948    0]
 [ 467 6439]]
--------------------------------------------------
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': None, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2}, Mean Score: 0.944, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': None, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 10}, Mean Score: 0.949, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': None, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 20}, Mean Score: 0.954, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': None, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 2}, Mean Score: 0.968, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': None, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 10}, Mean Score: 0.968, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': None, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 20}, Mean Score: 0.968, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': None, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 2}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': None, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 10}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': None, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 20}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 10, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2}, Mean Score: 0.969, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 10, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 10}, Mean Score: 0.969, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 10, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 20}, Mean Score: 0.969, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 10, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 2}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 10, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 10}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 10, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 20}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 10, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 2}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 10, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 10}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 10, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 20}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 20, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2}, Mean Score: 0.962, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 20, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 10}, Mean Score: 0.963, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 20, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 20}, Mean Score: 0.964, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 20, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 2}, Mean Score: 0.969, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 20, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 10}, Mean Score: 0.969, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 20, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 20}, Mean Score: 0.969, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 20, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 2}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 20, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 10}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 20, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 20}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 30, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2}, Mean Score: 0.954, Std Dev: 0.002
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 30, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 10}, Mean Score: 0.957, Std Dev: 0.002
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 30, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 20}, Mean Score: 0.960, Std Dev: 0.002
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 30, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 2}, Mean Score: 0.968, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 30, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 10}, Mean Score: 0.968, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 30, 'classifier__min_samples_leaf': 5, 'classifier__min_samples_split': 20}, Mean Score: 0.969, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 30, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 2}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 30, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 10}, Mean Score: 0.970, Std Dev: 0.001
Model: DecisionTreeClassifier, Params: {'classifier': DecisionTreeClassifier(random_state=31011997), 'classifier__max_depth': 30, 'classifier__min_samples_leaf': 10, 'classifier__min_samples_split': 20}, Mean Score: 0.970, Std Dev: 0.001
Model: LogisticRegression, Params: {'classifier': LogisticRegression(random_state=31011997), 'classifier__C': 0.1, 'classifier__solver': 'liblinear'}, Mean Score: 0.538, Std Dev: 0.000
Model: LogisticRegression, Params: {'classifier': LogisticRegression(random_state=31011997), 'classifier__C': 0.1, 'classifier__solver': 'lbfgs'}, Mean Score: 0.538, Std Dev: 0.000
Model: LogisticRegression, Params: {'classifier': LogisticRegression(random_state=31011997), 'classifier__C': 1.0, 'classifier__solver': 'liblinear'}, Mean Score: 0.538, Std Dev: 0.000
Model: LogisticRegression, Params: {'classifier': LogisticRegression(random_state=31011997), 'classifier__C': 1.0, 'classifier__solver': 'lbfgs'}, Mean Score: 0.538, Std Dev: 0.000
Model: LogisticRegression, Params: {'classifier': LogisticRegression(random_state=31011997), 'classifier__C': 10, 'classifier__solver': 'liblinear'}, Mean Score: 0.538, Std Dev: 0.000
Model: LogisticRegression, Params: {'classifier': LogisticRegression(random_state=31011997), 'classifier__C': 10, 'classifier__solver': 'lbfgs'}, Mean Score: 0.538, Std Dev: 0.000
Model: RandomForestClassifier, Params: {'classifier': RandomForestClassifier(random_state=31011997), 'classifier__max_features': 'sqrt', 'classifier__n_estimators': 200}, Mean Score: 0.944, Std Dev: 0.001
Model: RandomForestClassifier, Params: {'classifier': RandomForestClassifier(random_state=31011997), 'classifier__max_features': 'sqrt', 'classifier__n_estimators': 300}, Mean Score: 0.944, Std Dev: 0.001
Model: RandomForestClassifier, Params: {'classifier': RandomForestClassifier(random_state=31011997), 'classifier__max_features': 'log2', 'classifier__n_estimators': 200}, Mean Score: 0.944, Std Dev: 0.001
Model: RandomForestClassifier, Params: {'classifier': RandomForestClassifier(random_state=31011997), 'classifier__max_features': 'log2', 'classifier__n_estimators': 300}, Mean Score: 0.944, Std Dev: 0.001
Model: KNeighborsClassifier, Params: {'classifier': KNeighborsClassifier(), 'classifier__n_neighbors': 1, 'classifier__weights': 'uniform'}, Mean Score: 0.944, Std Dev: 0.001
Model: KNeighborsClassifier, Params: {'classifier': KNeighborsClassifier(), 'classifier__n_neighbors': 1, 'classifier__weights': 'distance'}, Mean Score: 0.944, Std Dev: 0.001
Model: KNeighborsClassifier, Params: {'classifier': KNeighborsClassifier(), 'classifier__n_neighbors': 3, 'classifier__weights': 'uniform'}, Mean Score: 0.966, Std Dev: 0.001
Model: KNeighborsClassifier, Params: {'classifier': KNeighborsClassifier(), 'classifier__n_neighbors': 3, 'classifier__weights': 'distance'}, Mean Score: 0.952, Std Dev: 0.001
Model: KNeighborsClassifier, Params: {'classifier': KNeighborsClassifier(), 'classifier__n_neighbors': 5, 'classifier__weights': 'uniform'}, Mean Score: 0.969, Std Dev: 0.001
Model: KNeighborsClassifier, Params: {'classifier': KNeighborsClassifier(), 'classifier__n_neighbors': 5, 'classifier__weights': 'distance'}, Mean Score: 0.956, Std Dev: 0.001
Model: SVC, Params: {'classifier': SVC(max_iter=1000, probability=True, random_state=31011997), 'classifier__C': 1, 'classifier__kernel': 'rbf'}, Mean Score: 0.476, Std Dev: 0.107
Model: SVC, Params: {'classifier': SVC(max_iter=1000, probability=True, random_state=31011997), 'classifier__C': 1, 'classifier__kernel': 'sigmoid'}, Mean Score: 0.374, Std Dev: 0.017
Model: SVC, Params: {'classifier': SVC(max_iter=1000, probability=True, random_state=31011997), 'classifier__C': 2, 'classifier__kernel': 'rbf'}, Mean Score: 0.476, Std Dev: 0.107
Model: SVC, Params: {'classifier': SVC(max_iter=1000, probability=True, random_state=31011997), 'classifier__C': 2, 'classifier__kernel': 'sigmoid'}, Mean Score: 0.375, Std Dev: 0.018
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'tanh', 'classifier__hidden_layer_sizes': (50,), 'classifier__learning_rate_init': 0.01}, Mean Score: 0.965, Std Dev: 0.001
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'tanh', 'classifier__hidden_layer_sizes': (50,), 'classifier__learning_rate_init': 0.1}, Mean Score: 0.966, Std Dev: 0.001
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'tanh', 'classifier__hidden_layer_sizes': (100,), 'classifier__learning_rate_init': 0.01}, Mean Score: 0.965, Std Dev: 0.001
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'tanh', 'classifier__hidden_layer_sizes': (100,), 'classifier__learning_rate_init': 0.1}, Mean Score: 0.965, Std Dev: 0.002
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'tanh', 'classifier__hidden_layer_sizes': (50, 50), 'classifier__learning_rate_init': 0.01}, Mean Score: 0.969, Std Dev: 0.001
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'tanh', 'classifier__hidden_layer_sizes': (50, 50), 'classifier__learning_rate_init': 0.1}, Mean Score: 0.869, Std Dev: 0.173
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'relu', 'classifier__hidden_layer_sizes': (50,), 'classifier__learning_rate_init': 0.01}, Mean Score: 0.957, Std Dev: 0.003
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'relu', 'classifier__hidden_layer_sizes': (50,), 'classifier__learning_rate_init': 0.1}, Mean Score: 0.951, Std Dev: 0.006
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'relu', 'classifier__hidden_layer_sizes': (100,), 'classifier__learning_rate_init': 0.01}, Mean Score: 0.956, Std Dev: 0.002
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'relu', 'classifier__hidden_layer_sizes': (100,), 'classifier__learning_rate_init': 0.1}, Mean Score: 0.954, Std Dev: 0.003
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'relu', 'classifier__hidden_layer_sizes': (50, 50), 'classifier__learning_rate_init': 0.01}, Mean Score: 0.968, Std Dev: 0.001
Model: MLPClassifier, Params: {'classifier': MLPClassifier(random_state=31011997), 'classifier__activation': 'relu', 'classifier__hidden_layer_sizes': (50, 50), 'classifier__learning_rate_init': 0.1}, Mean Score: 0.967, Std Dev: 0.002
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 1, 'classifier__n_estimators': 100, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 1, 'classifier__n_estimators': 100, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 1, 'classifier__n_estimators': 300, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 1, 'classifier__n_estimators': 300, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 2, 'classifier__n_estimators': 100, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 2, 'classifier__n_estimators': 100, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 2, 'classifier__n_estimators': 300, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 2, 'classifier__n_estimators': 300, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 1, 'classifier__n_estimators': 100, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 1, 'classifier__n_estimators': 100, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 1, 'classifier__n_estimators': 300, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 1, 'classifier__n_estimators': 300, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 2, 'classifier__n_estimators': 100, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 2, 'classifier__n_estimators': 100, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 2, 'classifier__n_estimators': 300, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 0.7, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 2, 'classifier__n_estimators': 300, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 1, 'classifier__n_estimators': 100, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 1, 'classifier__n_estimators': 100, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 1, 'classifier__n_estimators': 300, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 1, 'classifier__n_estimators': 300, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 2, 'classifier__n_estimators': 100, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 2, 'classifier__n_estimators': 100, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 2, 'classifier__n_estimators': 300, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.1, 'classifier__max_depth': 2, 'classifier__n_estimators': 300, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 1, 'classifier__n_estimators': 100, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 1, 'classifier__n_estimators': 100, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 1, 'classifier__n_estimators': 300, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 1, 'classifier__n_estimators': 300, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 2, 'classifier__n_estimators': 100, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 2, 'classifier__n_estimators': 100, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 2, 'classifier__n_estimators': 300, 'classifier__subsample': 0.7}, Mean Score: 0.967, Std Dev: 0.001
Model: XGBClassifier, Params: {'classifier': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=31011997, ...), 'classifier__colsample_bytree': 1, 'classifier__learning_rate': 0.3, 'classifier__max_depth': 2, 'classifier__n_estimators': 300, 'classifier__subsample': 1}, Mean Score: 0.967, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 0.5, 'classifier__max_samples': 0.5, 'classifier__n_estimators': 10}, Mean Score: 0.963, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 0.5, 'classifier__max_samples': 0.5, 'classifier__n_estimators': 50}, Mean Score: 0.965, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 0.5, 'classifier__max_samples': 0.5, 'classifier__n_estimators': 100}, Mean Score: 0.966, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 0.5, 'classifier__max_samples': 1.0, 'classifier__n_estimators': 10}, Mean Score: 0.950, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 0.5, 'classifier__max_samples': 1.0, 'classifier__n_estimators': 50}, Mean Score: 0.945, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 0.5, 'classifier__max_samples': 1.0, 'classifier__n_estimators': 100}, Mean Score: 0.944, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 1.0, 'classifier__max_samples': 0.5, 'classifier__n_estimators': 10}, Mean Score: 0.963, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 1.0, 'classifier__max_samples': 0.5, 'classifier__n_estimators': 50}, Mean Score: 0.965, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 1.0, 'classifier__max_samples': 0.5, 'classifier__n_estimators': 100}, Mean Score: 0.966, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 1.0, 'classifier__max_samples': 1.0, 'classifier__n_estimators': 10}, Mean Score: 0.950, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 1.0, 'classifier__max_samples': 1.0, 'classifier__n_estimators': 50}, Mean Score: 0.945, Std Dev: 0.001
Model: BaggingClassifier, Params: {'classifier': BaggingClassifier(estimator=DecisionTreeClassifier(random_state=31011997),
                  random_state=31011997), 'classifier__max_features': 1.0, 'classifier__max_samples': 1.0, 'classifier__n_estimators': 100}, Mean Score: 0.944, Std Dev: 0.001
Model: AdaBoostClassifier, Params: {'classifier': AdaBoostClassifier(estimator=DecisionTreeClassifier(max_depth=1,
                                                    random_state=31011997),
                   random_state=31011997), 'classifier__learning_rate': 0.1, 'classifier__n_estimators': 50}, Mean Score: 0.970, Std Dev: 0.001
Model: AdaBoostClassifier, Params: {'classifier': AdaBoostClassifier(estimator=DecisionTreeClassifier(max_depth=1,
                                                    random_state=31011997),
                   random_state=31011997), 'classifier__learning_rate': 0.1, 'classifier__n_estimators': 100}, Mean Score: 0.970, Std Dev: 0.001
Model: AdaBoostClassifier, Params: {'classifier': AdaBoostClassifier(estimator=DecisionTreeClassifier(max_depth=1,
                                                    random_state=31011997),
                   random_state=31011997), 'classifier__learning_rate': 1, 'classifier__n_estimators': 50}, Mean Score: 0.970, Std Dev: 0.001
Model: AdaBoostClassifier, Params: {'classifier': AdaBoostClassifier(estimator=DecisionTreeClassifier(max_depth=1,
                                                    random_state=31011997),
                   random_state=31011997), 'classifier__learning_rate': 1, 'classifier__n_estimators': 100}, Mean Score: 0.970, Std Dev: 0.001
Model: GradientBoostingClassifier, Params: {'classifier': GradientBoostingClassifier(random_state=31011997), 'classifier__learning_rate': 0.1, 'classifier__max_depth': 3, 'classifier__n_estimators': 10}, Mean Score: 0.970, Std Dev: 0.001
Model: GradientBoostingClassifier, Params: {'classifier': GradientBoostingClassifier(random_state=31011997), 'classifier__learning_rate': 0.1, 'classifier__max_depth': 3, 'classifier__n_estimators': 100}, Mean Score: 0.970, Std Dev: 0.001
Model: GradientBoostingClassifier, Params: {'classifier': GradientBoostingClassifier(random_state=31011997), 'classifier__learning_rate': 0.1, 'classifier__max_depth': 5, 'classifier__n_estimators': 10}, Mean Score: 0.970, Std Dev: 0.001
Model: GradientBoostingClassifier, Params: {'classifier': GradientBoostingClassifier(random_state=31011997), 'classifier__learning_rate': 0.1, 'classifier__max_depth': 5, 'classifier__n_estimators': 100}, Mean Score: 0.969, Std Dev: 0.001
Model: GradientBoostingClassifier, Params: {'classifier': GradientBoostingClassifier(random_state=31011997), 'classifier__learning_rate': 0.3, 'classifier__max_depth': 3, 'classifier__n_estimators': 10}, Mean Score: 0.970, Std Dev: 0.001
Model: GradientBoostingClassifier, Params: {'classifier': GradientBoostingClassifier(random_state=31011997), 'classifier__learning_rate': 0.3, 'classifier__max_depth': 3, 'classifier__n_estimators': 100}, Mean Score: 0.967, Std Dev: 0.001
Model: GradientBoostingClassifier, Params: {'classifier': GradientBoostingClassifier(random_state=31011997), 'classifier__learning_rate': 0.3, 'classifier__max_depth': 5, 'classifier__n_estimators': 10}, Mean Score: 0.970, Std Dev: 0.001
Model: GradientBoostingClassifier, Params: {'classifier': GradientBoostingClassifier(random_state=31011997), 'classifier__learning_rate': 0.3, 'classifier__max_depth': 5, 'classifier__n_estimators': 100}, Mean Score: 0.961, Std Dev: 0.000
